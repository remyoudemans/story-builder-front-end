export declare const getEntries: {
    <T>(o: {
        [s: string]: T;
    }): [string, T][];
    (o: any): [string, any][];
};
export declare const getValues: {
    <T>(o: {
        [s: string]: T;
    }): T[];
    (o: any): any[];
};
export declare const resolveEntryFromIterable: <T, K extends keyof T>(entryIterableOrObject: T | Iterable<[K, T[K]]>) => Iterable<[K, T[K]]>;
export declare const convertIterableToArray: <V>(iterable: Iterable<V>) => V[];
export declare function isPlainObject(value: any): boolean;
export declare function getActionTypes<ACTION_TYPE>(actionTypeOrActionTypes: ACTION_TYPE | ACTION_TYPE[] | {
    [key: number]: ACTION_TYPE;
} | {
    [key: string]: ACTION_TYPE;
}): ACTION_TYPE[];
