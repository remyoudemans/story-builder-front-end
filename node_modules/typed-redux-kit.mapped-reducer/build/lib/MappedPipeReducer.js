import { getActionTypes } from './util';
export class MappedPipeReducer {
    constructor(opts = {}) {
        this.reducerMap = new Map();
        /**
         * Append reducer functions for the given key
         */
        this.unshift = (actionTypeOrActionTypes, reducerOrReducers) => {
            const actionTypes = getActionTypes(actionTypeOrActionTypes);
            const reducers = Array.isArray(reducerOrReducers)
                ? reducerOrReducers
                : [reducerOrReducers];
            actionTypes.forEach((actionType) => {
                const reducerArray = this.reducerMap.has(actionType)
                    ? this.reducerMap.get(actionType)
                    : [];
                reducerArray.unshift(...reducers);
                this.reducerMap.set(actionType, reducerArray);
            });
            return this;
        };
        this.prepend = this.unshift;
        /**
         * Append reducer functions for the given key
         */
        this.push = (actionTypeOrActionTypes, reducerOrReducers) => {
            const actionTypes = getActionTypes(actionTypeOrActionTypes);
            const reducers = Array.isArray(reducerOrReducers)
                ? reducerOrReducers
                : [reducerOrReducers];
            actionTypes.forEach((actionType) => {
                const reducerArray = this.reducerMap.has(actionType)
                    ? this.reducerMap.get(actionType)
                    : [];
                reducerArray.push(...reducers);
                this.reducerMap.set(actionType, reducerArray);
            });
            return this;
        };
        this.append = this.push;
        /**
         * Replace reducer functions for the given key
         */
        this.set = (actionTypeOrActionTypes, reducerOrReducers) => {
            const actionTypes = getActionTypes(actionTypeOrActionTypes);
            const reducers = Array.isArray(reducerOrReducers)
                ? reducerOrReducers
                : [reducerOrReducers];
            actionTypes.forEach((actionType) => {
                this.reducerMap.set(actionType, reducers);
            });
            return this;
        };
        /**
         * Replace reducer functions for the given key
         */
        this.delete = (actionTypeOrActionTypes) => {
            const actionTypes = getActionTypes(actionTypeOrActionTypes);
            actionTypes.forEach((actionType) => {
                this.reducerMap.delete(actionType);
            });
            return this;
        };
        this.get = (actionType) => this.reducerMap.get(actionType);
        this.reduce = (state = this.initialState, action) => {
            if (!this.reducerMap.has(action.type))
                return state;
            const reducers = this.reducerMap.get(action.type);
            return reducers.reduce((aState, reducer) => reducer(aState, action), state);
        };
        this.initialState = opts.initialState;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwcGVkUGlwZVJlZHVjZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGliL01hcHBlZFBpcGVSZWR1Y2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxRQUFRLENBQUE7QUFJdkMsTUFBTTtJQUtKLFlBQVksT0FBb0MsRUFBRTtRQUYxQyxlQUFVLEdBQUcsSUFBSSxHQUFHLEVBQTRDLENBQUE7UUFNeEU7O1dBRUc7UUFDSSxZQUFPLEdBQUcsQ0FDZix1QkFBOEksRUFDOUksaUJBQXFGO1lBRXJGLE1BQU0sV0FBVyxHQUF5QixjQUFjLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtZQUNqRixNQUFNLFFBQVEsR0FBdUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztrQkFDakYsaUJBQWlCO2tCQUNqQixDQUFDLGlCQUFpQixDQUFDLENBQUE7WUFFdkIsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFVBQVU7Z0JBQzdCLE1BQU0sWUFBWSxHQUF1QyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7c0JBQ3BGLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQztzQkFDL0IsRUFBRSxDQUFBO2dCQUNOLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQTtnQkFDakMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFBO1lBQy9DLENBQUMsQ0FBQyxDQUFBO1lBQ0YsTUFBTSxDQUFDLElBQUksQ0FBQTtRQUNiLENBQUMsQ0FBQTtRQUNNLFlBQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFBO1FBRTdCOztXQUVHO1FBQ0ksU0FBSSxHQUFHLENBQ1osdUJBQThJLEVBQzlJLGlCQUFxRjtZQUVyRixNQUFNLFdBQVcsR0FBeUIsY0FBYyxDQUFDLHVCQUF1QixDQUFD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